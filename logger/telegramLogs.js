import TelegramBot from 'node-telegram-bot-api'
import dotenv from 'dotenv'
import { saveChatId, getAllChatIds } from './db.js'

dotenv.config()

const bot = new TelegramBot(process.env.TG_API_KEY, { polling: true })

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º chat.id
bot.on('message', (msg) => {
  const chatId = msg.chat.id
  saveChatId(chatId)

  // –û—Ç–≤–µ—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  bot.sendMessage(chatId, 'üëã <b>–ü—Ä–∏–≤–µ—Ç!</b> –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.',  { parse_mode: 'html' })
})

// –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤—Å–µ–º chat.id
export const sendBroadcast = async (text) => {
  const chats = getAllChatIds()

  for (const [i, chatId] of chats.entries()) {
    try {
      await bot.sendMessage(chatId, text, { parse_mode: 'html' })
      if (i % 20 === 0) await new Promise(r => setTimeout(r, 1000)) 
    } catch (err) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ ${chatId}: ${err.message}`)
    }
  }

  console.log('‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
}

